openapi: 3.0.2
servers:
  - url: "https://api.umpyre.io/"
info:
  description: >-
    Umpyre API ðŸ‘€
  version: 1.0.0
  title: Umpyre API
paths:
  /client/authenticate:
    post:
      summary: Authenticate client
      requestBody:
        required: true
        description: A JSON object containing the client ID and password hash.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      security: []
      operationId: authenticate
      responses:
        "200":
          description: >
            Successfully authenticated.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /client/authenticate-temporarily:
    post:
      summary: Authenticate client temporarily
      requestBody:
        required: true
        description: A JSON object containing the client ID and password hash.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      security: []
      operationId: authenticate-temporarily
      responses:
        "200":
          description: >
            Successfully authenticated.

            The returned token is only valid for 1 hour.
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /client/{client_id}:
    get:
      summary: >-
        Get client info
      description: >-
        Fetches and returns the client info object for the provided client ID.
      operationId: get-client
      parameters:
        - name: client_id
          in: path
          description: "Client ID."
          required: true
          example: "aca0da3ee24b41d0a98d9a4f6256aa78"
          schema:
            type: string
      responses:
        "200":
          description: >-
            The client exists and is available.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "404":
          description: >-
            The client does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
    put:
      summary: >-
        Update client info
      description: >-
        Updates the underlying client model for the provided client ID. If
        you're trying to modify the password hash, email address, or phone
        number, you must obtain a temporary API token.
      operationId: update-client
      requestBody:
        required: true
        description: >-
          A JSON object containing the client model. If you're trying to
          modify the password hash, email address, or phone number, you must
          obtain a temporary API token.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
      responses:
        "200":
          description: >-
            The client exists and is available.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "404":
          description: >-
            The client does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /client:
    post:
      summary: >-
        Create a new client
      description: >-
        Creates a new client with the supplied client model. A unique client ID
        will be generated by the server.
      operationId: create-client
      security: []
      requestBody:
        description: The client to create.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewClient"
      responses:
        "200":
          description: >-
            The client was created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          description: >-
            The client could not be created.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
  /messages:
    get:
      summary: >-
        Get all messages
      description: >-
        Returns all of the messages in a client's inbox stored on the server, minus any messages included in the optional sketch.
      operationId: get-messages
      parameters:
      - in: query
        name: sketch
        schema:
          type: string
        description: A URL-safe base-64 encoded sketch, or serialized bloom filter, representing the messages which the client already has.
      responses:
        "200":
          description: >-
            The client exists and is available.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Messages"
        "404":
          description: >-
            The specified client does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
    post:
      summary: >-
        Send a message
      description: >-
        Send a message from the calling client's account to another client. When sending a message, only the `to` and `body` fields need to be specified.
      operationId: send-message
      requestBody:
        description: Message to send.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Message"
      responses:
        "200":
          description: >-
            The client exists and is available.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "404":
          description: >-
            The client does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
components:
  schemas:
    Client:
      type: object
      properties:
        client_id:
          type: string
          description: >-
            Unique identifier for this client.
        full_name:
          type: string
          description: >-
            Public display name of this client.
        box_public_key:
          type: string
          description: >-
            Box public key for this client. Used for encrypting the message body.
        sign_public_key:
          type: string
          description: >-
            Signing public key for this client. Used for signing the message
            to verify authenticity.
        password_hash:
          type: string
          format: password
          description: >-
            A base64 encoded 64-byte Blake2b hash of the client's password.
            Do not send the plain-text password to the server. To update the
            password hash, the client must firust obtain and then supply a
            short-term token with the request.
        email:
          type: string
          format: email
          description: >-
            Contact email address for this client. To update the email
            address, the client must firust obtain and then supply a
            short-term token with the request.
        phone_number:
          type: object
          description: >-
            An object representing a phone number. To update the phone
            number, the client must firust obtain and then supply a
            short-term token with the request.
          properties:
            country_code:
              type: string
              description: >-
                Two-letter CLDR country code for this number.
            national_number:
              type: string
              description: >-
                The national phone number.
        handle:
          type: string
          description: >-
            The client's public handle.
        profile:
          type: string
          description: >-
            The client's public profile.
      required:
        - client_id
        - full_name
        - box_public_key
        - sign_public_key
    NewClient:
      type: object
      properties:
        full_name:
          type: string
          description: >-
            Public display name of this client.
        box_public_key:
          type: string
          description: >-
            Box public key for this client. Used for encrypting the message body.
        sign_public_key:
          type: string
          description: >-
            Signing public key for this client. Used for signing the message
            to verify authenticity.
        password_hash:
          type: string
          format: password
          description: >-
            A base64 encoded 64-byte Blake2b hash of the client's password. Do not send the plain-text
            password to the server.
        email:
          type: string
          format: email
          description: >-
            Contact email address for this client.
        phone_number:
          type: object
          properties:
            country_code:
              type: string
              description: >-
                Two-letter CLDR country code for this number.
            national_number:
              type: string
              description: >-
                The national phone number.
      required:
        - full_name
        - box_public_key
        - sign_public_key
        - password_hash
        - email
        - phone_number
    Message:
      type: object
      properties:
        hash:
          type: string
          description: >-
            Base64 encoded 32-byte Blake2b hash of this message's body. When sending messages, this field does not need to be specified (it will be overwritten by the server if specified).
        from:
          type: string
          description: >-
            Client ID of sender.
        to:
          type: string
          description: >-
            Client ID of recipient.
        body:
          type: string
          description: >-
            Text body of message, encrypted using a libsodium Box with base64 encoding.
        received_at:
          description: >-
            The time at which the message was received by the server.
          $ref: "#/components/schemas/Timestamp"
        sent_at:
          description: >-
            The time at which the message was sent by the client.
          $ref: "#/components/schemas/Timestamp"
        sender_public_key:
          type: string
          description: >-
            Public key of the sender used to encrypt the message body.
        recipient_public_key:
          type: string
          description: >-
            Public key of the recipient used to encrypt the message body.
        nonce:
          type: string
          description: Nonce used for encryption.
        pda:
          type: string
          description: Public display of affection.
      required:
        - hash
        - to
        - from
        - body
        - sent_at
        - signature
        - sender_public_key
        - recipient_public_key
    Messages:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
    Timestamp:
      type: object
      description: An object representing a timestamp.
      properties:
        seconds:
          type: integer
          description: >-
            Represents seconds of UTC time since Unix epoch
            1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
            9999-12-31T23:59:59Z inclusive.
        nanos:
          type: integer
          description: >-
            Non-negative fractions of a second at nanosecond resolution. Negative
            second values with fractions must still have non-negative nanos values
            that count forward in time. Must be from 0 to 999,999,999
            inclusive.
      required:
        - seconds
        - nanos
    LoginRequest:
      type: object
      properties:
        client_id:
          type: string
          description: >-
            Client ID for the login request.
        password_hash:
          type: string
          format: password
          description: >-
            A base64 encoded 64-byte Blake2b hash of the client's password.
      required:
        - client_id
        - password_hash
  responses:
    UnauthorizedError:
      description: Credentials missing or invalid.
      headers:
        "WWW-Authenticate":
          schema:
            type: string
    Error:
      description: Error response.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: >-
                  A description of the error.
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      in: header
      name: X-UMPYRE-APIKEY
    apiKeyTempHeader:
      type: apiKey
      in: header
      name: X-UMPYRE-APIKEY-TEMP
security:
  - apiKeyHeader: []
